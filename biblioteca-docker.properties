spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
server.port=0
logging.level.es.ejercicio.microservicios=DEBUG
eureka.client.serviceUrl.defaultZone=http://${DOCKER_HOST:192.168.99.100}:${EUREKA_PORT:8084}/eureka/
spring.zipkin.baseUrl=http://${DOCKER_HOST:192.168.99.100}:${ZIPKIN_PORT:9411}
spring.sleuth.sampler.percentage=1.0
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=12000

#Configuracion Oauth2
oauth2.server-host=http://${DOCKER_HOST:192.168.99.100}:${AUTHORIZATION_PORT:9000}/uaa
spring.oauth2.client.id=res_appBiblioteca
spring.oauth2.client.clientId=bibliotecaApp
spring.oauth2.client.clientSecret=secretBiblioteca
spring.oauth2.client.accessTokenUri=http://${DOCKER_HOST:192.168.99.100}:${AUTHORIZATION_PORT:9000/uaa/oauth/token/
spring.oauth2.client.tokenInfoUri=http://${DOCKER_HOST:192.168.99.100}:${AUTHORIZATION_PORT:9000/uaa/oauth/check_token/
security.oauth2.resource.userInfoUri=http://${DOCKER_HOST:192.168.99.100}:${AUTHORIZATION_PORT:9000/uaa/user

#Configuracion Oauth2 biblioteca cliente
ejercicio.oauth2.client.id=${spring.oauth2.client.id}
ejercicio.oauth2.client.accessTokenUrl=${oauth2.server-host}/oauth/token
ejercicio.oauth2.client.clientId= ${spring.oauth2.client.clientId}
ejercicio.oauth2.client.clientSecret= ${spring.oauth2.client.clientSecret}
ejercicio.oauth2.client.clientAuthenticationScheme= header